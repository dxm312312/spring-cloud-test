#网关功能：监控，限流，分发，鉴权
server.port=8200
spring.application.name=zuul
eureka.client.service-url.defaultZone=http://localhost:7001/eureka/
eureka.instance.hostname=localhost
eureka.instance.instance-id=zuulTest
#下面不配置，通过网关访问的地址  localhost:8200/c1/feignHello

######   1  ########
# 将 c1路由为client    现localhost:8200/client/feignHello
#后面两个*号，表示 所有路径都转发，一个* 表示 只转发一级
zuul.routes.c1=/client/**

######   2  ########
# 自定义服务名 newclient，不使用eureka服务名c1
#zuul.routes.newclient.path=/testclient/**
#zuul.routes.newclient.service-id=c1

######   3 静态路由 ########
# 自定义服务名 newclient，不使用eureka服务名c1,指定访问 8102
#zuul.routes.newclient.path=/testclient/**
#zuul.routes.newclient.url=http://localhost:8101

######   4  静态路由+ribbon负载均衡########
# 自定义服务名 newclient，不使用eureka服务名c1
#zuul.routes.newclient.path=/testclient/**
#zuul.routes.newclient.service-id=testapp
#testapp.ribbon.listOfServers=http://localhost:8101,http://localhost:8102
#这个配置暂时还不知道干嘛的
#ribbon.eureka.enabled=false


##添加前缀  localhost:8200/test/client/feignHello
#zuul.prefix=/test
#访问的时候是否忽略前缀,不忽略的话  /test会在请求url中
#zuul.strip-prefix=true

#忽略下面的值向微服务传播(不配置为空的话token不会传到下面的服务中），以下配置为空表示：所有请求头都透传到后面微服务。
#header中的Cookie经过网关过滤，不发给后面的系统，如果要传  可以设置为空zuul.sensitive-headers=
zuul.sensitive-headers=Cookie
#忽略服务，多个服务以，分隔
zuul.ignored-services=s1,c1

#zuul.ignored-patterns=/**/getUserInfo/**   可以忽略有getUserInfo的请求
